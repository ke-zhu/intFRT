% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_ada_gamma.R
\name{compute_ada_gamma}
\alias{compute_ada_gamma}
\title{Determine the Adaptive Threshold for Conformal Selective Borrowing}
\usage{
compute_ada_gamma(
  Y,
  A,
  S,
  X,
  family = "gaussian",
  gamma_grid = seq(0, 1, by = 0.1),
  n_rep_gamma = 100,
  parallel = FALSE,
  n_cores = NULL,
  opt = "mse",
  sig_level = 0.05,
  ...
)
}
\arguments{
\item{Y}{Numeric vector of outcomes.}

\item{A}{Binary treatment indicator vector (1 for treatment, 0 for control).}

\item{S}{Binary indicator vector for source of data (1 for randomized trial
data, 0 for external control data).}

\item{X}{Matrix of covariates.}

\item{family}{A description of the outcome type. Default is "gaussian" for
continuous outcomes.}

\item{gamma_grid}{Numeric vector representing the grid of potential gamma
values to search over. Default is a sequence from 0 to 1 with 11 grids.}

\item{n_rep_gamma}{Integer specifying the number of resampling iterations
for estimating the MSE given a certain gamma. Default is \code{10}.}

\item{parallel}{Logical value indicating whether to use parallel computing.
Default is \code{FALSE}.}

\item{n_cores}{Integer specifying the number of cores to use for parallel
computing. Default is the number of available physical cores on the
machine, as determined by \code{future::availableCores(logical = FALSE)}.}

\item{opt}{Character specifying the criterion to determine gamma. Options are
"power" or "mse". Default is "mse".}

\item{sig_level}{Numeric value indicating the significance level for
hypothesis tests when \code{opt = "power"}. Default is 0.05.}

\item{...}{Additional arguments passed to the internal \code{ec_borrow} function.}
}
\value{
A numeric value representing the selected gamma that minimizes the
empirical MSE.
}
\description{
This function adaptively determines the threshold (gamma) to minimize the
Mean Squared Error (MSE) when performing Conformal Selective Borrowing.
}
\examples{
# This example illustrates the use of the Fisher Randomization Test (FRT)
# and different borrowing methods for hybrid controlled trials.
\dontrun{
library(intFRT)

# Simulate data for a hybrid controlled trial
set.seed(1)
n_rct <- 50  # Number of observations in the randomized controlled trial
n_ec <- 100  # Number of external controls
n <- n_rct + n_ec  # Total number of observations

# Covariates (2 covariates, uniformly distributed)
X <- matrix(runif(n * 2), n, 2)

# Treatment assignment (1 = treatment, 0 = control)
A <- c(rep(0:1, each = n_rct / 2), rep(0, n_ec))

# Data source indicator (1 = randomized trial, 0 = external control)
S <- c(rep(1, n_rct), rep(0, n_ec))

# Generate potential outcomes (continuous)
Y1 <- 1 + 2 * X[,1] + 0.1 * X[,2] + rnorm(n)
Y0 <- 2 * X[,1] + 0.1 * X[,2] + rnorm(n)

# Introduce bias in half of the external controls
id_biased_EC <- tail(which(S == 0), n = n_ec / 2)
Y0[id_biased_EC] <- Y0[id_biased_EC] - 10

# Observed outcome
Y <- A * Y1 + (1 - A) * Y0

# Compute adaptive gamma
ada_g <- compute_ada_gamma(
  Y, A, S, X,
  # Tuning with 20 replications for illustration purposes
  # Recommend setting `n_rep_gamma = 100` or higher with parallel computing
  n_rep_gamma = 20
)
ada_g
}

}
